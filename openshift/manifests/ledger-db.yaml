apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: ledger-db
  annotations:
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/dzianis-shkindzerau/bank-of-anthos.git'  
  labels:
    app: ledger-db
    tier: db
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: ledger-db
    app.kubernetes.io/name: ledger-db
    app.kubernetes.io/part-of: bank-of-anthos
spec:        
  instances:
    - name: instance-zone-b
      replicas: 1
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nodes.epam.com/zone
                    operator: In
                    values:
                      - 'b'
      tolerations:
        - effect: NoSchedule
          key: nodes.epam.com/zone
          operator: Equal
          value: 'b'
      dataVolumeClaimSpec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 250m
          memory: 1Gi
      sidecars:
        replicaCertCopy:
          resources:
            requests:
              cpu: 50m
              memory: 200Mi
            limits:
              cpu: 250m
              memory: 1Gi 
  backups:
    pgbackrest:
      global:
        log-level-console: info
        log-level-file: info
        repo1-retention-diff: '7'
        repo1-retention-full: '7'
        repo1-retention-full-type: time
      manual:
        options:
          - '--type=full'
        repoName: repo1
      repos:
        - name: repo1
          schedules:
            full: 5 2 * * *
          volume:
            volumeClaimSpec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi 
      sidecars:
        pgbackrest:
          resources:
            requests:
              cpu: 50m
              memory: 200Mi
            limits:
              cpu: 250m
              memory: 1Gi    
        pgbackrestConfig:
          resources:
            requests:
              cpu: 50m
              memory: 200Mi
            limits:
              cpu: 250m
              memory: 1Gi                 
      #  - name: repo2
      #    s3:
      #      bucket: "<YOUR_AWS_S3_BUCKET_NAME>"
      #      endpoint: "<YOUR_AWS_S3_ENDPOINT>"
      #      region: "<YOUR_AWS_S3_REGION>"  
  monitoring:
    pgmonitor:
      exporter:
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 25m
            memory: 64Mi  
  patroni:
    dynamicConfiguration:
      postgresql:
        parameters:
          jit: false
          maintenance_work_mem: 256MB
          max_connections: '100'
          shared_buffers: 512MB
          shared_preload_libraries: 'pgaudit,pg_stat_statements,pgnodemx'
          temp_buffers: 8MB
          work_mem: 32MB
        pg_hba:
          - local all "postgres" peer
          - hostssl replication "_crunchyrepl" all cert
          - hostssl "postgres" "_crunchyrepl" all cert
          - host all "_crunchyrepl" all reject
          - hostssl all all all md5
        use_pg_rewind: true
    leaderLeaseDurationSeconds: 30
    port: 8008
    syncPeriodSeconds: 10
  databaseInitSQL:
    key: init.sql
    name: ledger-db-init-sql
  port: 5432
  postgresVersion: 14

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: ledger-db-init-sql
  labels:
    app: ledger-db
    app.kubernetes.io/part-of: bank-of-anthos
data:
  init.sql: |
    \c ledger-db;
    set role "ledger-db";

    CREATE TABLE TRANSACTIONS (
      TRANSACTION_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      FROM_ACCT CHAR(10) NOT NULL,
      TO_ACCT CHAR(10) NOT NULL,
      FROM_ROUTE CHAR(9) NOT NULL,
      TO_ROUTE CHAR(9) NOT NULL,
      AMOUNT INT NOT NULL,
      TIMESTAMP TIMESTAMP NOT NULL
    );

    -- index account number/routing number pairs
    CREATE INDEX ON TRANSACTIONS (FROM_ACCT, FROM_ROUTE, TIMESTAMP);
    CREATE INDEX ON TRANSACTIONS (TO_ACCT, TO_ROUTE, TIMESTAMP);

    -- append only ledger; prevent updates or deletes
    CREATE RULE PREVENT_UPDATE AS
      ON UPDATE TO TRANSACTIONS
      DO INSTEAD NOTHING;
    CREATE RULE PREVENT_DELETE AS
      ON DELETE TO TRANSACTIONS
      DO INSTEAD NOTHING;

# TODO: init db with test data from the ../src/ledger-db/initdb/1_create_transactions.sh script

---

kind: Service
apiVersion: v1
metadata:
  name: ledger-db
  annotations:
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/dzianis-shkindzerau/bank-of-anthos.git'  
  labels:
    app: ledger-db
    tier: db
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: ledger-db
    app.kubernetes.io/name: ledger-db
    app.kubernetes.io/part-of: bank-of-anthos
    postgres-operator.crunchydata.com/cluster: ledger-db
spec:
  ipFamilies:
    - IPv4
  ports:
    - name: exporter
      protocol: TCP
      port: 9187
      targetPort: 9187
  internalTrafficPolicy: Cluster
  type: ClusterIP
  selector:
    postgres-operator.crunchydata.com/cluster: ledger-db
    postgres-operator.crunchydata.com/crunchy-postgres-exporter: 'true'

---

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ledger-db
  annotations:
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/dzianis-shkindzerau/bank-of-anthos.git'  
  labels:
    app: ledger-db
    tier: db
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: ledger-db
    app.kubernetes.io/name: ledger-db
    app.kubernetes.io/part-of: bank-of-anthos
    postgres-operator.crunchydata.com/cluster: ledger-db
    prometheus: paas-public
spec:
  endpoints:
    - interval: 1m
      port: exporter
      scheme: http
      scrapeTimeout: 10s
  selector:
    matchLabels:
      postgres-operator.crunchydata.com/cluster: ledger-db
